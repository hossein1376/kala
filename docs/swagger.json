{
    "swagger": "2.0",
    "info": {
        "description": "Online shop backend.",
        "title": "Kala",
        "contact": {
            "name": "Hossein Yazdani",
            "url": "https://GodlyNice.ir"
        },
        "license": {
            "name": "MIT license",
            "url": "https://opensource.org/license/mit/"
        },
        "version": "0.1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "paths": {
        "/login": {
            "post": {
                "description": "Sign-in into the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "user credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "single object containing JWT token",
                        "schema": {
                            "$ref": "#/definitions/doc.loginHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "bad input",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    },
                    "401": {
                        "description": "not authorized",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    },
                    "500": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "get all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user management"
                ],
                "summary": "Get all users",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page number",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "number of items per page",
                        "name": "count",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "array of user objects",
                        "schema": {
                            "$ref": "#/definitions/doc.getAllUsersHandlerResponse"
                        }
                    },
                    "500": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    }
                }
            },
            "post": {
                "description": "creates a new user and returns the newly created data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user management"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "user data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.UserCreationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "single object containing user's data",
                        "schema": {
                            "$ref": "#/definitions/doc.createNewUserHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "bad input",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    },
                    "500": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "get a single user by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user management"
                ],
                "summary": "Get user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "single object containing user's data",
                        "schema": {
                            "$ref": "#/definitions/doc.getUserByIDHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "invalid ID",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    },
                    "500": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete a user by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user management"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    },
                    "500": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    }
                }
            },
            "patch": {
                "description": "update a user data by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user management"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "user data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/structure.UserUpdateRequest"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "user ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "single object containing user's data",
                        "schema": {
                            "$ref": "#/definitions/doc.updateUserByIDHandlerResponse"
                        }
                    },
                    "400": {
                        "description": "bad input",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    },
                    "404": {
                        "description": "user not found",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    },
                    "500": {
                        "description": "unexpected error",
                        "schema": {
                            "$ref": "#/definitions/doc.httpResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "doc.createNewUserHandlerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/structure.User"
                }
            }
        },
        "doc.getAllUsersHandlerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/structure.GetAllUsersResponse"
                }
            }
        },
        "doc.getUserByIDHandlerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/structure.User"
                }
            }
        },
        "doc.httpResponseError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "error message"
                }
            }
        },
        "doc.loginHandlerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/structure.LoginResponse"
                }
            }
        },
        "doc.updateUserByIDHandlerResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/structure.User"
                }
            }
        },
        "structure.GetAllUsersResponse": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer",
                    "example": 2
                },
                "per_page": {
                    "type": "integer",
                    "example": 10
                },
                "total_pages": {
                    "type": "integer",
                    "example": 5
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/structure.User"
                    }
                }
            }
        },
        "structure.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "username"
                }
            }
        },
        "structure.LoginResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "random_jwt_token"
                }
            }
        },
        "structure.Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/structure.Product"
                    }
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "structure.Product": {
            "type": "object",
            "properties": {
                "available": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "rating": {
                    "type": "number"
                },
                "rating_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "structure.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email@email.com"
                },
                "firstname": {
                    "type": "string",
                    "example": "John"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "lastname": {
                    "type": "string",
                    "example": "Doe"
                },
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/structure.Order"
                    }
                },
                "phone": {
                    "type": "string",
                    "example": "0123456789"
                },
                "username": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "structure.UserCreationRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email@email.com"
                },
                "firstname": {
                    "type": "string",
                    "example": "John"
                },
                "lastname": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "phone": {
                    "type": "string",
                    "example": "0123456789"
                },
                "username": {
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "structure.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "email@email.com"
                },
                "firstname": {
                    "type": "string",
                    "example": "John"
                },
                "lastname": {
                    "type": "string",
                    "example": "Doe"
                },
                "password": {
                    "type": "string",
                    "example": "123456"
                },
                "phone": {
                    "type": "string",
                    "example": "0123456789"
                },
                "username": {
                    "type": "string",
                    "example": "user"
                }
            }
        }
    }
}