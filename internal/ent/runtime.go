// Code generated by ent, DO NOT EDIT.

package ent

import (
	"kala/internal/ent/address"
	"kala/internal/ent/attribute"
	"kala/internal/ent/attributevalue"
	"kala/internal/ent/brand"
	"kala/internal/ent/category"
	"kala/internal/ent/comment"
	"kala/internal/ent/cons"
	"kala/internal/ent/image"
	"kala/internal/ent/order"
	"kala/internal/ent/product"
	"kala/internal/ent/pros"
	"kala/internal/ent/schema"
	"kala/internal/ent/seller"
	"kala/internal/ent/subcategory"
	"kala/internal/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	addressFields := schema.Address{}.Fields()
	_ = addressFields
	// addressDescAddress is the schema descriptor for address field.
	addressDescAddress := addressFields[0].Descriptor()
	// address.AddressValidator is a validator for the "address" field. It is called by the builders before save.
	address.AddressValidator = addressDescAddress.Validators[0].(func(string) error)
	// addressDescCity is the schema descriptor for city field.
	addressDescCity := addressFields[1].Descriptor()
	// address.CityValidator is a validator for the "city" field. It is called by the builders before save.
	address.CityValidator = addressDescCity.Validators[0].(func(string) error)
	// addressDescState is the schema descriptor for state field.
	addressDescState := addressFields[2].Descriptor()
	// address.StateValidator is a validator for the "state" field. It is called by the builders before save.
	address.StateValidator = addressDescState.Validators[0].(func(string) error)
	// addressDescPhone is the schema descriptor for phone field.
	addressDescPhone := addressFields[5].Descriptor()
	// address.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	address.PhoneValidator = addressDescPhone.Validators[0].(func(string) error)
	// addressDescZipCode is the schema descriptor for zip_code field.
	addressDescZipCode := addressFields[6].Descriptor()
	// address.ZipCodeValidator is a validator for the "zip_code" field. It is called by the builders before save.
	address.ZipCodeValidator = addressDescZipCode.Validators[0].(func(string) error)
	// addressDescCoordinates is the schema descriptor for coordinates field.
	addressDescCoordinates := addressFields[7].Descriptor()
	// address.CoordinatesValidator is a validator for the "coordinates" field. It is called by the builders before save.
	address.CoordinatesValidator = addressDescCoordinates.Validators[0].(func(string) error)
	// addressDescIsSeller is the schema descriptor for is_seller field.
	addressDescIsSeller := addressFields[8].Descriptor()
	// address.DefaultIsSeller holds the default value on creation for the is_seller field.
	address.DefaultIsSeller = addressDescIsSeller.Default.(bool)
	attributeFields := schema.Attribute{}.Fields()
	_ = attributeFields
	// attributeDescName is the schema descriptor for name field.
	attributeDescName := attributeFields[0].Descriptor()
	// attribute.NameValidator is a validator for the "name" field. It is called by the builders before save.
	attribute.NameValidator = attributeDescName.Validators[0].(func(string) error)
	attributevalueFields := schema.AttributeValue{}.Fields()
	_ = attributevalueFields
	// attributevalueDescValue is the schema descriptor for value field.
	attributevalueDescValue := attributevalueFields[0].Descriptor()
	// attributevalue.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	attributevalue.ValueValidator = attributevalueDescValue.Validators[0].(func(string) error)
	brandMixin := schema.Brand{}.Mixin()
	brandMixinFields0 := brandMixin[0].Fields()
	_ = brandMixinFields0
	brandFields := schema.Brand{}.Fields()
	_ = brandFields
	// brandDescCreateTime is the schema descriptor for create_time field.
	brandDescCreateTime := brandMixinFields0[0].Descriptor()
	// brand.DefaultCreateTime holds the default value on creation for the create_time field.
	brand.DefaultCreateTime = brandDescCreateTime.Default.(func() time.Time)
	// brandDescUpdateTime is the schema descriptor for update_time field.
	brandDescUpdateTime := brandMixinFields0[1].Descriptor()
	// brand.DefaultUpdateTime holds the default value on creation for the update_time field.
	brand.DefaultUpdateTime = brandDescUpdateTime.Default.(func() time.Time)
	// brand.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	brand.UpdateDefaultUpdateTime = brandDescUpdateTime.UpdateDefault.(func() time.Time)
	categoryMixin := schema.Category{}.Mixin()
	categoryMixinFields0 := categoryMixin[0].Fields()
	_ = categoryMixinFields0
	categoryFields := schema.Category{}.Fields()
	_ = categoryFields
	// categoryDescCreateTime is the schema descriptor for create_time field.
	categoryDescCreateTime := categoryMixinFields0[0].Descriptor()
	// category.DefaultCreateTime holds the default value on creation for the create_time field.
	category.DefaultCreateTime = categoryDescCreateTime.Default.(func() time.Time)
	// categoryDescUpdateTime is the schema descriptor for update_time field.
	categoryDescUpdateTime := categoryMixinFields0[1].Descriptor()
	// category.DefaultUpdateTime holds the default value on creation for the update_time field.
	category.DefaultUpdateTime = categoryDescUpdateTime.Default.(func() time.Time)
	// category.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	category.UpdateDefaultUpdateTime = categoryDescUpdateTime.UpdateDefault.(func() time.Time)
	// categoryDescName is the schema descriptor for name field.
	categoryDescName := categoryFields[0].Descriptor()
	// category.NameValidator is a validator for the "name" field. It is called by the builders before save.
	category.NameValidator = categoryDescName.Validators[0].(func(string) error)
	// categoryDescDescription is the schema descriptor for description field.
	categoryDescDescription := categoryFields[1].Descriptor()
	// category.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	category.DescriptionValidator = categoryDescDescription.Validators[0].(func(string) error)
	commentMixin := schema.Comment{}.Mixin()
	commentMixinFields0 := commentMixin[0].Fields()
	_ = commentMixinFields0
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescCreateTime is the schema descriptor for create_time field.
	commentDescCreateTime := commentMixinFields0[0].Descriptor()
	// comment.DefaultCreateTime holds the default value on creation for the create_time field.
	comment.DefaultCreateTime = commentDescCreateTime.Default.(func() time.Time)
	// commentDescUpdateTime is the schema descriptor for update_time field.
	commentDescUpdateTime := commentMixinFields0[1].Descriptor()
	// comment.DefaultUpdateTime holds the default value on creation for the update_time field.
	comment.DefaultUpdateTime = commentDescUpdateTime.Default.(func() time.Time)
	// comment.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	comment.UpdateDefaultUpdateTime = commentDescUpdateTime.UpdateDefault.(func() time.Time)
	// commentDescContent is the schema descriptor for content field.
	commentDescContent := commentFields[0].Descriptor()
	// comment.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	comment.ContentValidator = commentDescContent.Validators[0].(func(string) error)
	// commentDescLikes is the schema descriptor for likes field.
	commentDescLikes := commentFields[2].Descriptor()
	// comment.DefaultLikes holds the default value on creation for the likes field.
	comment.DefaultLikes = commentDescLikes.Default.(int32)
	// comment.LikesValidator is a validator for the "likes" field. It is called by the builders before save.
	comment.LikesValidator = commentDescLikes.Validators[0].(func(int32) error)
	// commentDescDislikes is the schema descriptor for dislikes field.
	commentDescDislikes := commentFields[3].Descriptor()
	// comment.DefaultDislikes holds the default value on creation for the dislikes field.
	comment.DefaultDislikes = commentDescDislikes.Default.(int32)
	// comment.DislikesValidator is a validator for the "dislikes" field. It is called by the builders before save.
	comment.DislikesValidator = commentDescDislikes.Validators[0].(func(int32) error)
	// commentDescRating is the schema descriptor for rating field.
	commentDescRating := commentFields[4].Descriptor()
	// comment.DefaultRating holds the default value on creation for the rating field.
	comment.DefaultRating = commentDescRating.Default.(float64)
	// comment.RatingValidator is a validator for the "rating" field. It is called by the builders before save.
	comment.RatingValidator = commentDescRating.Validators[0].(func(float64) error)
	// commentDescRatingCount is the schema descriptor for rating_count field.
	commentDescRatingCount := commentFields[5].Descriptor()
	// comment.RatingCountValidator is a validator for the "rating_count" field. It is called by the builders before save.
	comment.RatingCountValidator = commentDescRatingCount.Validators[0].(func(int32) error)
	consFields := schema.Cons{}.Fields()
	_ = consFields
	// consDescCon is the schema descriptor for con field.
	consDescCon := consFields[0].Descriptor()
	// cons.ConValidator is a validator for the "con" field. It is called by the builders before save.
	cons.ConValidator = consDescCon.Validators[0].(func(string) error)
	imageFields := schema.Image{}.Fields()
	_ = imageFields
	// imageDescName is the schema descriptor for name field.
	imageDescName := imageFields[0].Descriptor()
	// image.NameValidator is a validator for the "name" field. It is called by the builders before save.
	image.NameValidator = imageDescName.Validators[0].(func(string) error)
	// imageDescPath is the schema descriptor for path field.
	imageDescPath := imageFields[1].Descriptor()
	// image.PathValidator is a validator for the "path" field. It is called by the builders before save.
	image.PathValidator = imageDescPath.Validators[0].(func(string) error)
	// imageDescWidth is the schema descriptor for width field.
	imageDescWidth := imageFields[3].Descriptor()
	// image.WidthValidator is a validator for the "width" field. It is called by the builders before save.
	image.WidthValidator = imageDescWidth.Validators[0].(func(int32) error)
	// imageDescHigh is the schema descriptor for high field.
	imageDescHigh := imageFields[4].Descriptor()
	// image.HighValidator is a validator for the "high" field. It is called by the builders before save.
	image.HighValidator = imageDescHigh.Validators[0].(func(int32) error)
	// imageDescSizeKB is the schema descriptor for size_kb field.
	imageDescSizeKB := imageFields[5].Descriptor()
	// image.SizeKBValidator is a validator for the "size_kb" field. It is called by the builders before save.
	image.SizeKBValidator = imageDescSizeKB.Validators[0].(func(float64) error)
	orderMixin := schema.Order{}.Mixin()
	orderMixinFields0 := orderMixin[0].Fields()
	_ = orderMixinFields0
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescCreateTime is the schema descriptor for create_time field.
	orderDescCreateTime := orderMixinFields0[0].Descriptor()
	// order.DefaultCreateTime holds the default value on creation for the create_time field.
	order.DefaultCreateTime = orderDescCreateTime.Default.(func() time.Time)
	// orderDescUpdateTime is the schema descriptor for update_time field.
	orderDescUpdateTime := orderMixinFields0[1].Descriptor()
	// order.DefaultUpdateTime holds the default value on creation for the update_time field.
	order.DefaultUpdateTime = orderDescUpdateTime.Default.(func() time.Time)
	// order.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	order.UpdateDefaultUpdateTime = orderDescUpdateTime.UpdateDefault.(func() time.Time)
	productMixin := schema.Product{}.Mixin()
	productMixinFields0 := productMixin[0].Fields()
	_ = productMixinFields0
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescCreateTime is the schema descriptor for create_time field.
	productDescCreateTime := productMixinFields0[0].Descriptor()
	// product.DefaultCreateTime holds the default value on creation for the create_time field.
	product.DefaultCreateTime = productDescCreateTime.Default.(func() time.Time)
	// productDescUpdateTime is the schema descriptor for update_time field.
	productDescUpdateTime := productMixinFields0[1].Descriptor()
	// product.DefaultUpdateTime holds the default value on creation for the update_time field.
	product.DefaultUpdateTime = productDescUpdateTime.Default.(func() time.Time)
	// product.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	product.UpdateDefaultUpdateTime = productDescUpdateTime.UpdateDefault.(func() time.Time)
	// productDescName is the schema descriptor for name field.
	productDescName := productFields[0].Descriptor()
	// product.NameValidator is a validator for the "name" field. It is called by the builders before save.
	product.NameValidator = productDescName.Validators[0].(func(string) error)
	// productDescDescription is the schema descriptor for description field.
	productDescDescription := productFields[1].Descriptor()
	// product.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	product.DescriptionValidator = productDescDescription.Validators[0].(func(string) error)
	// productDescRating is the schema descriptor for rating field.
	productDescRating := productFields[3].Descriptor()
	// product.RatingValidator is a validator for the "rating" field. It is called by the builders before save.
	product.RatingValidator = productDescRating.Validators[0].(func(float64) error)
	// productDescRatingCount is the schema descriptor for rating_count field.
	productDescRatingCount := productFields[4].Descriptor()
	// product.RatingCountValidator is a validator for the "rating_count" field. It is called by the builders before save.
	product.RatingCountValidator = productDescRatingCount.Validators[0].(func(int32) error)
	// productDescPrice is the schema descriptor for price field.
	productDescPrice := productFields[5].Descriptor()
	// product.PriceValidator is a validator for the "price" field. It is called by the builders before save.
	product.PriceValidator = productDescPrice.Validators[0].(func(int32) error)
	// productDescQuantity is the schema descriptor for quantity field.
	productDescQuantity := productFields[6].Descriptor()
	// product.QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	product.QuantityValidator = productDescQuantity.Validators[0].(func(int32) error)
	prosFields := schema.Pros{}.Fields()
	_ = prosFields
	// prosDescPro is the schema descriptor for pro field.
	prosDescPro := prosFields[0].Descriptor()
	// pros.ProValidator is a validator for the "pro" field. It is called by the builders before save.
	pros.ProValidator = prosDescPro.Validators[0].(func(string) error)
	sellerMixin := schema.Seller{}.Mixin()
	sellerMixinFields0 := sellerMixin[0].Fields()
	_ = sellerMixinFields0
	sellerFields := schema.Seller{}.Fields()
	_ = sellerFields
	// sellerDescCreateTime is the schema descriptor for create_time field.
	sellerDescCreateTime := sellerMixinFields0[0].Descriptor()
	// seller.DefaultCreateTime holds the default value on creation for the create_time field.
	seller.DefaultCreateTime = sellerDescCreateTime.Default.(func() time.Time)
	// sellerDescUpdateTime is the schema descriptor for update_time field.
	sellerDescUpdateTime := sellerMixinFields0[1].Descriptor()
	// seller.DefaultUpdateTime holds the default value on creation for the update_time field.
	seller.DefaultUpdateTime = sellerDescUpdateTime.Default.(func() time.Time)
	// seller.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	seller.UpdateDefaultUpdateTime = sellerDescUpdateTime.UpdateDefault.(func() time.Time)
	// sellerDescName is the schema descriptor for name field.
	sellerDescName := sellerFields[0].Descriptor()
	// seller.NameValidator is a validator for the "name" field. It is called by the builders before save.
	seller.NameValidator = sellerDescName.Validators[0].(func(string) error)
	// sellerDescRating is the schema descriptor for rating field.
	sellerDescRating := sellerFields[2].Descriptor()
	// seller.RatingValidator is a validator for the "rating" field. It is called by the builders before save.
	seller.RatingValidator = sellerDescRating.Validators[0].(func(float64) error)
	// sellerDescRatingCount is the schema descriptor for rating_count field.
	sellerDescRatingCount := sellerFields[3].Descriptor()
	// seller.RatingCountValidator is a validator for the "rating_count" field. It is called by the builders before save.
	seller.RatingCountValidator = sellerDescRatingCount.Validators[0].(func(int32) error)
	// sellerDescPhone is the schema descriptor for phone field.
	sellerDescPhone := sellerFields[4].Descriptor()
	// seller.PhoneValidator is a validator for the "phone" field. It is called by the builders before save.
	seller.PhoneValidator = sellerDescPhone.Validators[0].(func(string) error)
	subcategoryMixin := schema.SubCategory{}.Mixin()
	subcategoryMixinFields0 := subcategoryMixin[0].Fields()
	_ = subcategoryMixinFields0
	subcategoryFields := schema.SubCategory{}.Fields()
	_ = subcategoryFields
	// subcategoryDescCreateTime is the schema descriptor for create_time field.
	subcategoryDescCreateTime := subcategoryMixinFields0[0].Descriptor()
	// subcategory.DefaultCreateTime holds the default value on creation for the create_time field.
	subcategory.DefaultCreateTime = subcategoryDescCreateTime.Default.(func() time.Time)
	// subcategoryDescUpdateTime is the schema descriptor for update_time field.
	subcategoryDescUpdateTime := subcategoryMixinFields0[1].Descriptor()
	// subcategory.DefaultUpdateTime holds the default value on creation for the update_time field.
	subcategory.DefaultUpdateTime = subcategoryDescUpdateTime.Default.(func() time.Time)
	// subcategory.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	subcategory.UpdateDefaultUpdateTime = subcategoryDescUpdateTime.UpdateDefault.(func() time.Time)
	// subcategoryDescName is the schema descriptor for name field.
	subcategoryDescName := subcategoryFields[0].Descriptor()
	// subcategory.NameValidator is a validator for the "name" field. It is called by the builders before save.
	subcategory.NameValidator = subcategoryDescName.Validators[0].(func(string) error)
	// subcategoryDescDescription is the schema descriptor for description field.
	subcategoryDescDescription := subcategoryFields[1].Descriptor()
	// subcategory.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	subcategory.DescriptionValidator = subcategoryDescDescription.Validators[0].(func(string) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userMixinFields0[0].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userMixinFields0[1].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
	// user.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	user.UpdateDefaultUpdateTime = userDescUpdateTime.UpdateDefault.(func() time.Time)
	// userDescStatus is the schema descriptor for status field.
	userDescStatus := userFields[7].Descriptor()
	// user.DefaultStatus holds the default value on creation for the status field.
	user.DefaultStatus = userDescStatus.Default.(bool)
}
