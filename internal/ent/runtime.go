// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/hossein1376/kala/internal/ent/order"
	"github.com/hossein1376/kala/internal/ent/product"
	"github.com/hossein1376/kala/internal/ent/schema"
	"github.com/hossein1376/kala/internal/ent/user"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	orderMixin := schema.Order{}.Mixin()
	orderMixinFields0 := orderMixin[0].Fields()
	_ = orderMixinFields0
	orderFields := schema.Order{}.Fields()
	_ = orderFields
	// orderDescCreateTime is the schema descriptor for create_time field.
	orderDescCreateTime := orderMixinFields0[0].Descriptor()
	// order.DefaultCreateTime holds the default value on creation for the create_time field.
	order.DefaultCreateTime = orderDescCreateTime.Default.(func() time.Time)
	// orderDescUpdateTime is the schema descriptor for update_time field.
	orderDescUpdateTime := orderMixinFields0[1].Descriptor()
	// order.DefaultUpdateTime holds the default value on creation for the update_time field.
	order.DefaultUpdateTime = orderDescUpdateTime.Default.(func() time.Time)
	// order.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	order.UpdateDefaultUpdateTime = orderDescUpdateTime.UpdateDefault.(func() time.Time)
	productMixin := schema.Product{}.Mixin()
	productMixinFields0 := productMixin[0].Fields()
	_ = productMixinFields0
	productFields := schema.Product{}.Fields()
	_ = productFields
	// productDescCreateTime is the schema descriptor for create_time field.
	productDescCreateTime := productMixinFields0[0].Descriptor()
	// product.DefaultCreateTime holds the default value on creation for the create_time field.
	product.DefaultCreateTime = productDescCreateTime.Default.(func() time.Time)
	// productDescUpdateTime is the schema descriptor for update_time field.
	productDescUpdateTime := productMixinFields0[1].Descriptor()
	// product.DefaultUpdateTime holds the default value on creation for the update_time field.
	product.DefaultUpdateTime = productDescUpdateTime.Default.(func() time.Time)
	// product.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	product.UpdateDefaultUpdateTime = productDescUpdateTime.UpdateDefault.(func() time.Time)
	// productDescName is the schema descriptor for name field.
	productDescName := productFields[0].Descriptor()
	// product.NameValidator is a validator for the "name" field. It is called by the builders before save.
	product.NameValidator = productDescName.Validators[0].(func(string) error)
	// productDescDescription is the schema descriptor for description field.
	productDescDescription := productFields[1].Descriptor()
	// product.DescriptionValidator is a validator for the "description" field. It is called by the builders before save.
	product.DescriptionValidator = productDescDescription.Validators[0].(func(string) error)
	// productDescRating is the schema descriptor for rating field.
	productDescRating := productFields[3].Descriptor()
	// product.RatingValidator is a validator for the "rating" field. It is called by the builders before save.
	product.RatingValidator = productDescRating.Validators[0].(func(float64) error)
	// productDescRatingCount is the schema descriptor for rating_count field.
	productDescRatingCount := productFields[4].Descriptor()
	// product.RatingCountValidator is a validator for the "rating_count" field. It is called by the builders before save.
	product.RatingCountValidator = productDescRatingCount.Validators[0].(func(int32) error)
	// productDescPrice is the schema descriptor for price field.
	productDescPrice := productFields[5].Descriptor()
	// product.PriceValidator is a validator for the "price" field. It is called by the builders before save.
	product.PriceValidator = productDescPrice.Validators[0].(func(int32) error)
	// productDescQuantity is the schema descriptor for quantity field.
	productDescQuantity := productFields[6].Descriptor()
	// product.QuantityValidator is a validator for the "quantity" field. It is called by the builders before save.
	product.QuantityValidator = productDescQuantity.Validators[0].(func(int32) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateTime is the schema descriptor for create_time field.
	userDescCreateTime := userMixinFields0[0].Descriptor()
	// user.DefaultCreateTime holds the default value on creation for the create_time field.
	user.DefaultCreateTime = userDescCreateTime.Default.(func() time.Time)
	// userDescUpdateTime is the schema descriptor for update_time field.
	userDescUpdateTime := userMixinFields0[1].Descriptor()
	// user.DefaultUpdateTime holds the default value on creation for the update_time field.
	user.DefaultUpdateTime = userDescUpdateTime.Default.(func() time.Time)
	// user.UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	user.UpdateDefaultUpdateTime = userDescUpdateTime.UpdateDefault.(func() time.Time)
	// userDescStatus is the schema descriptor for status field.
	userDescStatus := userFields[7].Descriptor()
	// user.DefaultStatus holds the default value on creation for the status field.
	user.DefaultStatus = userDescStatus.Default.(bool)
}
