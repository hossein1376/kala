// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// LogsColumns holds the columns for the "logs" table.
	LogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "action", Type: field.TypeString, Nullable: true},
		{Name: "ip", Type: field.TypeString},
		{Name: "agent", Type: field.TypeString},
		{Name: "date", Type: field.TypeTime},
		{Name: "user", Type: field.TypeInt, Nullable: true},
	}
	// LogsTable holds the schema information for the "logs" table.
	LogsTable = &schema.Table{
		Name:       "logs",
		Columns:    LogsColumns,
		PrimaryKey: []*schema.Column{LogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "logs_users_logs",
				Columns:    []*schema.Column{LogsColumns[5]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeInt},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_users_order",
				Columns:    []*schema.Column{OrdersColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "review", Type: field.TypeString, Size: 2147483647},
		{Name: "rating", Type: field.TypeFloat64},
		{Name: "rating_count", Type: field.TypeInt32},
		{Name: "price", Type: field.TypeInt32},
		{Name: "quantity", Type: field.TypeInt32},
		{Name: "available", Type: field.TypeBool},
		{Name: "status", Type: field.TypeBool},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeBytes},
		{Name: "first_name", Type: field.TypeString, Nullable: true},
		{Name: "last_name", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "role", Type: field.TypeEnum, Enums: []string{"admin", "seller", "user"}, Default: "user"},
		{Name: "status", Type: field.TypeBool, Default: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// ProductOrderColumns holds the columns for the "product_order" table.
	ProductOrderColumns = []*schema.Column{
		{Name: "product_id", Type: field.TypeInt},
		{Name: "order_id", Type: field.TypeInt},
	}
	// ProductOrderTable holds the schema information for the "product_order" table.
	ProductOrderTable = &schema.Table{
		Name:       "product_order",
		Columns:    ProductOrderColumns,
		PrimaryKey: []*schema.Column{ProductOrderColumns[0], ProductOrderColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_order_product_id",
				Columns:    []*schema.Column{ProductOrderColumns[0]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "product_order_order_id",
				Columns:    []*schema.Column{ProductOrderColumns[1]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		LogsTable,
		OrdersTable,
		ProductsTable,
		UsersTable,
		ProductOrderTable,
	}
)

func init() {
	LogsTable.ForeignKeys[0].RefTable = UsersTable
	OrdersTable.ForeignKeys[0].RefTable = UsersTable
	ProductOrderTable.ForeignKeys[0].RefTable = ProductsTable
	ProductOrderTable.ForeignKeys[1].RefTable = OrdersTable
}
